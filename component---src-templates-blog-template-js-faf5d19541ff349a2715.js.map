{"version":3,"sources":["webpack:///./src/templates/blogTemplate.js"],"names":["Template","markdownRemark","data","frontmatter","html","title","charset","name","content","metaDescription","keywords","property","httpurl","path","thumbnail","className","align","src","alt","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"2FAAA,mJAKe,SAASA,EAAT,GAEX,IACMC,EADP,EADDC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BAAQD,EAAYE,OACpB,0BAAMC,QAAQ,UACd,0BAAMC,KAAK,cAAcC,QAASL,EAAYM,kBAC9C,0BAAMF,KAAK,WAAWC,QAASL,EAAYO,WAC3C,0BAAMH,KAAK,SAASC,QAAQ,iBAC5B,0BACEG,SAAS,SACTH,QAAO,GAAKL,EAAYS,QAAUT,EAAYU,OAEhD,0BAAMF,SAAS,UAAUH,QAAQ,YACjC,0BAAMG,SAAS,WAAWH,QAASL,EAAYE,QAC/C,0BAAMM,SAAS,iBAAiBH,QAASL,EAAYM,kBACrD,0BAAME,SAAS,WAAWH,QAASL,EAAYW,aAEjD,yBAAKC,UAAU,uBACb,6BAASA,UAAU,SACfZ,EAAYW,WACZ,yBAAKC,UAAU,kBACb,wBAAIA,UAAU,cAAcZ,EAAYE,UAIzCF,EAAYW,WACb,oCACE,yBACEC,UAAU,kBAGV,uBAAGC,MAAM,UACP,yBAAKC,IAAKd,EAAYW,UAAWI,IAAKf,EAAYE,UAKtD,wBAAIU,UAAU,cAAcZ,EAAYE,QAG5C,yBACEU,UAAU,oBACVI,wBAAyB,CAAEC,OAAQhB,QAQxC,IAAMiB,EAAS","file":"component---src-templates-blog-template-js-faf5d19541ff349a2715.js","sourcesContent":["import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\n\r\nexport default function Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n}) {\r\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\r\n  const { frontmatter, html } = markdownRemark;\r\n  return (\r\n    <Layout>\r\n      <Helmet>\r\n        <title>{frontmatter.title}</title>\r\n        <meta charset=\"utf-8\" />\r\n        <meta name=\"description\" content={frontmatter.metaDescription} />\r\n        <meta name=\"keywords\" content={frontmatter.keywords} />\r\n        <meta name=\"robots\" content=\"index,follow\" />\r\n        <meta\r\n          property=\"og:url\"\r\n          content={`${frontmatter.httpurl}${frontmatter.path}`}\r\n        />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:title\" content={frontmatter.title} />\r\n        <meta property=\"og:description\" content={frontmatter.metaDescription} />\r\n        <meta property=\"og:image\" content={frontmatter.thumbnail} />\r\n      </Helmet>\r\n      <div className=\"blog-post-container\">\r\n        <article className=\"post\">\r\n          {!frontmatter.thumbnail && (\r\n            <div className=\"post-thumbnail\">\r\n              <h1 className=\"post-title\">{frontmatter.title}</h1>\r\n              {/* <div className=\"post-meta\">{frontmatter.date}</div> */}\r\n            </div>\r\n          )}\r\n          {!!frontmatter.thumbnail && (\r\n            <>\r\n              <div\r\n                className=\"post-thumbnail\"\r\n                // style={{ backgroundImage: `url(${frontmatter.thumbnail})` }}\r\n              >\r\n                <p align=\"cetner\">\r\n                  <img src={frontmatter.thumbnail} alt={frontmatter.title} />\r\n                </p>\r\n                {/* <h1 className=\"post-title\">{frontmatter.title}</h1>\r\n              <div className=\"post-meta\">{frontmatter.date}</div> */}\r\n              </div>\r\n              <h1 className=\"post-title\">{frontmatter.title}</h1>\r\n            </>\r\n          )}\r\n          <div\r\n            className=\"blog-post-content\"\r\n            dangerouslySetInnerHTML={{ __html: html }}\r\n          />\r\n        </article>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        path\r\n        title\r\n        thumbnail\r\n        metaDescription\r\n        keywords\r\n        httpurl\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}